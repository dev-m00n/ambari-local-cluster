version: "3.8"
services:
  cluster-db:
    build:
      context: "./cluster-db"
      args:
        POSTGRES_GID: ${POSTGRES_GID}
        POSTGRES_UID: ${POSTGRES_UID}
    image: "cluster-postgres"
    container_name: "cluster-db"
    environment:
      POSTGRES_PASSWORD: "hadoop_postgres"
      POSTGRES_USER: "hadoop_postgres"
      PGDATA: "/pg_data"
    volumes:
      - ./cluster-db/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
      - ./cluster-db/mount/pg_data/:/pg_data/
    ports:
      - "5432:5432"
    networks:
      cluster-network:
        ipv4_address: 10.5.0.2
        aliases:
          - db.cluster.local

  ambari-server:
    container_name: "ambari-server"
    image: devmoonduck/ambari-local-server:2.7.4.0
    tty: true
    stdin_open: true
    environment:
      AMBARI_USER_NAME: "${AMBARI_USER_NAME}"
      AMBARI_UID: "${AMBARI_UID}"
    depends_on:
      - "cluster-db"
    ports:
      - "8080:8080"
      - "8440:9440"
      - "8441:8441"
    volumes:
      - ./ambari-server/mount/var/log/:/var/log/
      - ./ambari-server/mount/etc/ambari-server/conf/ambari.properties:/etc/ambari-server/conf/ambari.properties
    hostname: "ambari-server"
    privileged: true
    networks:
      cluster-network:
        ipv4_address: 10.5.0.3
        aliases:
          - "ambari.server.local"

  namenode-1:
    image: devmoonduck/ambari-local-agent:2.7.4.0
    container_name: "hadoop-name1"
    tty: true
    stdin_open: true
    environment:
      AMBARI_USER_NAME: "${AMBARI_USER_NAME}"
      AMBARI_UID: "${AMBARI_UID}"
    depends_on:
      - "ambari-server"
    ports:
      - "50070:50070"
      - "50470:50470"
      - "8020:8020"
      - "9000:9000"
      - "50090:50090"
    volumes:
      - ./ambari-agent/hadoop-name1/mount/var/log/:/var/log/
      - ./ambari-agent/hadoop-name1/mount/hadoop/:/hadoop/
    hostname: "hadoop-name1"
    privileged: true
    networks:
      cluster-network:
        ipv4_address: 10.5.0.11
        aliases:
          - hadoop.name1.local
  datanode1:
    image: devmoonduck/ambari-local-agent:2.7.4.0
    container_name: "hadoop-data1"
    tty: true
    stdin_open: true
    environment:
      AMBARI_USER_NAME: "${AMBARI_USER_NAME}"
      AMBARI_UID: "${AMBARI_UID}"
    depends_on:
      - "ambari-server"
    volumes:
      - ./ambari-agent/hadoop-data1/mount/var/log/:/var/log/
      - ./ambari-agent/hadoop-data1/mount/hadoop/:/hadoop/
    hostname: "hadoop-data1"
    privileged: true
    networks:
      cluster-network:
        ipv4_address: 10.5.0.21
        aliases:
          - hadoop.data1.local

  datanode2:
    image: devmoonduck/ambari-local-agent:2.7.4.0
    container_name: "hadoop-data2"
    tty: true
    stdin_open: true
    environment:
      AMBARI_USER_NAME: "${AMBARI_USER_NAME}"
      AMBARI_UID: "${AMBARI_UID}"
    depends_on:
      - "ambari-server"
    volumes:
      - ./ambari-agent/hadoop-data2/mount/var/log/:/var/log/
      - ./ambari-agent/hadoop-data2/mount/hadoop/:/hadoop/
    hostname: "hadoop-data2"
    privileged: true
    networks:
      cluster-network:
        ipv4_address: 10.5.0.22
        aliases:
          - hadoop.data2.local

  hive-server:
    image: devmoonduck/ambari-local-agent:2.7.4.0
    container_name: "hive-server"
    tty: true
    stdin_open: true
    environment:
      AMBARI_USER_NAME: "${AMBARI_USER_NAME}"
      AMBARI_UID: "${AMBARI_UID}"
    depends_on:
      - "ambari-server"
    ports:
      - "10000:10000"
      - "9083:9083"
      - "10001:10001"
    volumes:
      - ./ambari-agent/hive-server/mount/var/log/:/var/log/
      - ./ambari-agent/hive-server/mount/hadoop/:/hadoop/
    hostname: "hive-server"
    privileged: true
    networks:
      cluster-network:
        ipv4_address: 10.5.0.31
        aliases:
          - hive.server.local

  kafka-broker:
    image: devmoonduck/ambari-local-agent:2.7.4.0
    container_name: "kafka-broker"
    tty: true
    stdin_open: true
    environment:
      AMBARI_USER_NAME: "${AMBARI_USER_NAME}"
      AMBARI_UID: "${AMBARI_UID}"
    depends_on:
      - "ambari-server"
    ports:
      - "9092:9092"
    volumes:
      - ./ambari-agent/kafka-broker/mount/var/log/:/var/log/
      - ./ambari-agent/kafka-broker/mount/hadoop/:/hadoop/
      - ./ambari-agent/kafka-broker/mount/kafka-logs/:/kafka-logs/
    hostname: "kafka-broker"
    privileged: true
    networks:
      cluster-network:
        ipv4_address: 10.5.0.41
        aliases:
          - kafka.broker1.local

  knox:
    image: devmoonduck/ambari-local-agent:2.7.4.0
    container_name: "knox"
    tty: true
    stdin_open: true
    environment:
      AMBARI_USER_NAME: "${AMBARI_USER_NAME}"
      AMBARI_UID: "${AMBARI_UID}"
    depends_on:
      - "ambari-server"
    volumes:
      - ./ambari-agent/knox/mount/var/log/:/var/log/
      - ./ambari-agent/knox/mount/hadoop/:/hadoop/
    hostname: "knox"
    privileged: true
    networks:
      cluster-network:
        ipv4_address: 10.5.0.51
        aliases:
          - knox.local

  yarn-rm:
    image: devmoonduck/ambari-local-agent:2.7.4.0
    container_name: "yarn-rm"
    tty: true
    stdin_open: true
    environment:
      AMBARI_USER_NAME: "${AMBARI_USER_NAME}"
      AMBARI_UID: "${AMBARI_UID}"
    depends_on:
      - "ambari-server"
    volumes:
      - ./ambari-agent/yarn-rm/mount/var/log/:/var/log/
      - ./ambari-agent/yarn-rm/mount/hadoop/:/hadoop/
    hostname: "yarn-rm"
    privileged: true
    networks:
      cluster-network:
        ipv4_address: 10.5.0.61
        aliases:
          - yarn.rm.local

networks:
  cluster-network:
    driver: bridge
    name: "cluster-network"
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1
